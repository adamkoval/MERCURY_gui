import matplotlib.pyplot as plt

def ontype(event):
    print("You pressed key {:s}.".format(event.key))

def onclick(event):
    buttons = ['left', 'middle', 'right']
    toolbar = plt.get_current_fig_manager().toolbar
    if toolbar.mode != '':
        print("You clicked on something, but toolbar is in mode {:s}.".format(toolbar.mode))
    else:
        print("You {0}-clicked coords ({1},{2}) (pix ({3},{4}))".format(buttons[event.button-1],\
                                                                            event.xdata,\
                                                                            event.ydata,\
                                                                            event.x,\
                                                                            event.y))

#def onpress(event):
#    event.artist.set_color('b')
#    plt.draw()

def onpick(event):
    #print("You picked {:s}, which has colour={:s} and linewidth={:f}".format(event.artist,\
    #                                                                    event.artist.get_color(),\
    #                                                                    event.artist.get_linewidth()))
    #new_color = 'r' if event.artist.get_color()=='k' else 'k'
    #print("I will change the colour to colour={:s}".format(new_color))
    #event.artist.set_color(new_color)
    #plt.draw()
    #print("A pick-event has access to the mouse event: to prove it, I pass it to 'onclick'")
    #onclick(event.mouseevent)
    #print("----> That was actually from within 'onpick'!")
    point = event.artist
    x, y = point.get_data()
    onclick(event.mouseevent)
    event.artist.set_color('y')
    plt.draw()
    event.artist.set_color('b')
    plt.draw()
    print('x, y = {}, {}'.format(x, y))


if __name__ == "__main__":
    fig = plt.figure()
    plt.plot([1], [4], 'ko', picker=4)
    plt.plot([2], [2], 'ko', picker=4)
#    fig.canvas.mpl_connect('key_press_event', ontype)
#    fig.canvas.mpl_connect('button_press_event', onclick)
#    fig.canvas.mpl_connect('button_release_event', onclick)
    fig.canvas.mpl_connect('pick_event', onpick)
    plt.show()
